GitHub.Branches/ HW_3
1. На локальном репозитории сделать ветки для:
- Postman === git branch Postman
- Jmeter === git branch Jmeter
- CheckLists === git branch CheckLists
- Bug Reports === git branch Bug_reports
- SQL === git branch SQL
- Charles === git branch Charles
- Mobile testing === git branch Mobile_testing

2. Запушить все ветки на внешний репозиторий === git push origin --all
3. В ветке Bug Reports сделать текстовый документ со структурой баг репорта ===
=== 1)git checkout Bug_reports;
    2)vim bug_rep.json
		{
		"Summary":"Короткое описание проблемы, явно указывающее на причину и тип ошибочной ситуации",
		"Project":"Название тестируемого проекта",
		"Component":"Название части или функции тестируемого продукта",
		"Version":"Версия на которой была найдена ошибка",
		"Severity":
			{"Наиболее распространена пятиуровневая система градации серьезности дефекта":
				["S1 Блокирующий (Blocker)",
				"S2 Критический (Critical)",
				"S3 Значительный (Major)",
				"S4 Незначительный (Minor)",
				"S5 Тривиальный (Trivial)"]
			},
		"Priority":
			{"Приоритет дефекта":
				["P1 Высокий (High)",
				"P2 Средний (Medium)",
				"P3 Низкий (Low)"]
			},
		"Status":"Статус бага. Зависит от используемой процедуры и жизненного цикла бага (bug workflow and life cycle)",
		"Author":"Создатель баг репорта",
		"Assigned To":"Имя сотрудника, назначенного на решение проблемы",
		"Environment":"Информация об окружении, на котором был найден баг:операционная система, сервис пак, для WEB тестирования - имя и версия браузера",
		"Description":
			{
				"Steps to reproduse":"Шаги, по которым можно легко воспроизвести ситуацию, приведшую к ошибке",
				"Result":"Результат, полученный после прохождения шагов к воспроизведению",
				"Expected Result":"Ожидаемый правильный результат"
			},
		"Attachment":"Файл с логами, скриншот или любой другой документ, который может помочь прояснить причину ошибки или указать на способ решения проблемы"
		}

4. Запушить структуру багрепорта на внешний репозиторий === git add . && git commit -m "struct" && git push
5. Вмержить ветку Bug Reports в Main === 1)git checkout main;
					 2)git merge Bug_reports;
6. Запушить main на внешний репозиторий === git push -u origin main;
7. В ветке CheckLists набросать структуру чек листа === 
=== 1)git checkout CheckLists;
    2)vim checklist.txt
		чек-лист состоит из :
			1)ID («Номер»); 
			2)Tester Actions («Проверка», «Действия тестировщика»);
			3)Actual Result («Результат»);
			4)Expected Result («Ожидаемый результат»);
			5)Comment («Комментарий»)
8. Запушить структуру на внешний репозиторий  === git add . && git commit -m "structure" && git push;
9. На внешнем репозитории сделать Pull Request ветки CheckLists в main ===
=== 1)зайти в свой аккаунт GitHub;
	2)репозиторий branches;
	3)CheckLists had recent...;
	4)Compare & Pull requests;
10. Синхронизировать Внешнюю и Локальную ветки Main === 1)git checkout main;
							2)git pull
